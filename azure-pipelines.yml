trigger:
- main  # Déclenche le pipeline CI/CD sur des commits dans la branche main

pool:
  name: Default

variables:
  acrurl: 'lavender.azurecr.io'
  kubernetesServiceConnection: 'K8S_SERVICE_CONNECTION'
  namespace: 'default'
  releaseName: 'sampleapi-release'

steps:
# Étapes CI
- task: Docker@0
  displayName: 'Build an image'
  inputs:
    azureSubscription: 'K8S_SERVICE_CONNECTION'
    azureContainerRegistry: '{"loginServer":"lavender.azurecr.io", "id" : "/subscriptions/..."}'
    imageName: '$(acrurl)/sampleapi:$(Build.BuildId)'

- task: Docker@0
  displayName: 'Push an image'
  inputs:
    azureSubscription: 'K8S_SERVICE_CONNECTION'
    azureContainerRegistry: '{"loginServer":"lavender.azurecr.io", "id" : "/subscriptions/..."}'
    imageName: '$(acrurl)/sampleapi:$(Build.BuildId)'

- task: HelmInstaller@0
  displayName: 'Install Helm 2.14.1'

- task: HelmDeploy@1
  displayName: 'helm package'
  inputs:
    azureSubscriptionForACR: 'K8S_SERVICE_CONNECTION'
    azureResourceGroupForACR: 'K8S_RG'
    azureContainerRegistry: lavender.azurecr.io
    command: package
    chartPath: helm
    chartVersion: '$(Build.BuildId)'
    chartNameForACR: Chart
    chartPathForACR: helm/Chart.yaml

# Étapes CD
- task: HelmInstaller@1
  displayName: 'Install Helm'

- task: HelmDeploy@0
  displayName: 'Deploy to Kubernetes'
  inputs:
    azureSubscription: $(kubernetesServiceConnection)
    azureResourceGroup: 'K8S_RG'
    kubernetesCluster: 'MyAKSCluster'
    namespace: $(namespace)
    command: upgrade
    chartType: FilePath
    chartPath: '$(System.ArtifactsDirectory)/helm'
    releaseName: $(releaseName)
    overrideValues: |
      image.repository=$(acrurl)/sampleapi
      image.tag=$(Build.BuildId)
    install: true
  continueOnError: true  # Permet à la tâche de signaler une erreur mais de continuer à exécuter les tâches suivantes

- task: HelmDeploy@0
  displayName: 'Rollback on failure'
  condition: failed()  # Exécute cette tâche uniquement si une tâche précédente échoue
  inputs:
    azureSubscription: $(kubernetesServiceConnection)
    azureResourceGroup: 'K8S_RG'
    kubernetesCluster: 'MyAKSClustere'
    namespace: $(namespace)
    command: rollback
    releaseName: $(releaseName)
    version: $(Build.BuildId)  # Ou laissez vide pour revenir à la version précédente


