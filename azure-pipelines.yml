trigger:
- main

pool:
  name: 'default'

variables:
  acrName: 'lavender'
  acrUrl: 'lavender.azurecr.io'
  kubernetesServiceConnection: 'K8S_SERVICE_CONNECTION'
  namespace: 'default'
  releaseName: 'sampleapi-release'

stages:
- stage: Build
  displayName: "Build and Push Docker Image"
  jobs:
    - job: BuildAndPush
      displayName: "Build and Push Docker Image"
      steps:
        - task: AzureCLI@2
          displayName: "Login to Azure ACR"
          inputs:
            azureSubscription: $(kubernetesServiceConnection)
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              echo "Logging in to Azure ACR..."
              az acr login --name $(acrName)

        - script: |
            echo "Building Docker image..."
            docker build -t $(acrUrl)/sampleapi:$(Build.BuildId) .
          displayName: "Build Docker Image"

        - script: |
            echo "Pushing Docker image to ACR..."
            docker push $(acrUrl)/sampleapi:$(Build.BuildId)
          displayName: "Push Docker Image to ACR"

- stage: Deploy
  displayName: "Deploy to AKS"
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DeployApp
      displayName: "Deploy to AKS"
      environment: 'aks-environment'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: HelmInstaller@1
                displayName: 'Install Helm'

              - script: |
                  echo "Adding Helm repo..."
                  helm repo add my-acr-repo https://$(acrName).azurecr.io/helm/v1/repo
                  echo "Deploying to AKS using Helm..."
                  helm upgrade --install $(releaseName) ./helm \
                    --namespace $(namespace) \
                    --set image.repository=$(acrUrl)/sampleapi \
                    --set image.tag=$(Build.BuildId)
                displayName: "Deploy Helm Chart"